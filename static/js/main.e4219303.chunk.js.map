{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","today","Date","id","timerId","window","setInterval","getTime","console","info","toUTCString","slice","this","setState","prevProps","name","props","debug","clearInterval","className","Component","App","clockName","hasClock","getRandomName","document","addEventListener","event","preventDefault","removeEventListener","value","now","toString","currState","ReactDOM","render","getElementById"],"mappings":"qMAWaA,EAAb,4MACEC,MAAQ,CACNC,MAAO,IAAIC,KACXC,GAAI,GAHR,uDAME,WAAqB,IAAD,OACZC,EAAUC,OAAOC,aAAY,WACjC,EAAKC,UAELC,QAAQC,MAAK,IAAIP,MAAOQ,cAAcC,OAAO,IAAK,MACjD,KAEHC,KAAKC,SAAS,CAAEV,GAAIC,MAbxB,gCAgBE,SAAmBU,GAEjBA,EAAUC,OAASH,KAAKI,MAAMD,MAAQP,QAAQS,MAAR,uBAA8BH,EAAUC,KAAxC,eAAmDH,KAAKI,MAAMD,SAlBxG,kCAqBE,WACEV,OAAOa,cAAcN,KAAKZ,MAAMG,MAtBpC,qBAyBE,WACES,KAAKC,SAAS,CAAEZ,MAAO,IAAIC,SA1B/B,oBA6BE,WACE,IAAQa,EAASH,KAAKI,MAAdD,KACAd,EAAUW,KAAKZ,MAAfC,MAER,OACE,sBAAKkB,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGJ,IAGF,YAED,sBAAMI,UAAU,cAAhB,SACGlB,EAAMS,cAAcC,OAAO,IAAK,YA1C3C,GAA2BS,aCAdC,G,MAAb,4MACErB,MAAQ,CACNsB,UAAW,UACXnB,GAAI,EACJoB,UAAU,GAJd,uDAOE,WAAqB,IAAD,OACZnB,EAAUC,OAAOC,aAAY,WACjC,EAAKkB,kBACJ,MAEHZ,KAAKC,SAAS,CAAEV,GAAIC,IAEpBqB,SAASC,iBAAiB,eAAe,SAACC,GACxCA,EAAMC,iBACN,EAAKf,SAAS,CAAEU,UAAU,OAG5BE,SAASC,iBAAiB,SAAS,WACjC,EAAKb,SAAS,CAAEU,UAAU,SApBhC,kCAwBE,WAAwB,IAAD,OACrBlB,OAAOa,cAAcN,KAAKZ,MAAMG,IAEhCsB,SAASI,oBAAoB,eAAe,WAC1C,EAAKhB,SAAS,CAAEU,UAAU,OAG5BE,SAASI,oBAAoB,SAAS,WACpC,EAAKhB,SAAS,CAAEU,UAAU,SAhChC,2BAoCE,WACE,IAAMO,EAAQ5B,KAAK6B,MAAMC,WAAWrB,OAAO,GAE3CC,KAAKC,SAAS,CAAES,UAAU,SAAD,OAAWQ,OAvCxC,8BA0CE,WACElB,KAAKC,UAAS,SAAAoB,GAAS,MAAK,CAAEV,UAAWU,EAAUV,eA3CvD,oBA8CE,WACE,MAAgCX,KAAKZ,MAA7BsB,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,SAEnB,OACE,sBAAKJ,UAAU,MAAf,UACE,6CAECI,GAAY,cAAC,EAAD,CAAOR,KAAMO,WArDlC,GAAyBF,cCRzBc,IAASC,OACP,cAAC,EAAD,IACAV,SAASW,eAAe,W","file":"static/js/main.e4219303.chunk.js","sourcesContent":["import { Component } from 'react';\n\ninterface Props {\n  name: string;\n}\n\ninterface State {\n  today: Date;\n  id: number;\n}\n\nexport class Clock extends Component<Props, State> {\n  state = {\n    today: new Date(),\n    id: 0,\n  };\n\n  componentDidMount() {\n    const timerId = window.setInterval(() => {\n      this.getTime();\n      // eslint-disable-next-line\n      console.info(new Date().toUTCString().slice(-12, -4));\n    }, 1000);\n\n    this.setState({ id: timerId });\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    // eslint-disable-next-line\n    prevProps.name !== this.props.name && console.debug(`Renamed from ${prevProps.name} to ${this.props.name}`);\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.state.id);\n  }\n\n  getTime() {\n    this.setState({ today: new Date() });\n  }\n\n  render() {\n    const { name } = this.props;\n    const { today } = this.state;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {name}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {today.toUTCString().slice(-12, -4)}\n        </span>\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport { Clock } from './components/Clock';\n\nimport './App.scss';\n\ninterface State {\n  clockName: string;\n  id: number;\n  hasClock: boolean;\n}\n\nexport class App extends Component<{}, State> {\n  state = {\n    clockName: 'Clock-0',\n    id: 0,\n    hasClock: true,\n  };\n\n  componentDidMount() {\n    const timerId = window.setInterval(() => {\n      this.getRandomName();\n    }, 3300);\n\n    this.setState({ id: timerId });\n\n    document.addEventListener('contextmenu', (event) => {\n      event.preventDefault();\n      this.setState({ hasClock: false });\n    });\n\n    document.addEventListener('click', () => {\n      this.setState({ hasClock: true });\n    });\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.state.id);\n\n    document.removeEventListener('contextmenu', () => {\n      this.setState({ hasClock: false });\n    });\n\n    document.removeEventListener('click', () => {\n      this.setState({ hasClock: true });\n    });\n  }\n\n  getRandomName() {\n    const value = Date.now().toString().slice(-4);\n\n    this.setState({ clockName: `Clock-${value}` });\n  }\n\n  changeVisability() {\n    this.setState(currState => ({ hasClock: !currState.hasClock }));\n  }\n\n  render() {\n    const { clockName, hasClock } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {hasClock && <Clock name={clockName} />}\n\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}