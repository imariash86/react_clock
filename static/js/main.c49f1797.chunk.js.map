{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","timerId","state","today","Date","this","window","setInterval","getTime","console","info","toUTCString","slice","prevProps","name","props","debug","clearInterval","setState","className","Component","App","clockName","hasClock","hideClock","event","preventDefault","showClock","getRandomName","document","addEventListener","removeEventListener","value","now","toString","ReactDOM","render","getElementById"],"mappings":"qMAUaA,EAAb,4MACEC,QAAU,EADZ,EAGEC,MAAQ,CACNC,MAAO,IAAIC,MAJf,uDAOE,WAAqB,IAAD,OAClBC,KAAKJ,QAAUK,OAAOC,aAAY,WAChC,EAAKC,UAELC,QAAQC,MAAK,IAAIN,MAAOO,cAAcC,OAAO,IAAK,MACjD,OAZP,gCAeE,SAAmBC,GAEjBA,EAAUC,OAAST,KAAKU,MAAMD,MAAQL,QAAQO,MAAR,uBAA8BH,EAAUC,KAAxC,eAAmDT,KAAKU,MAAMD,SAjBxG,kCAoBE,WACER,OAAOW,cAAcZ,KAAKJ,WArB9B,qBAwBE,WACEI,KAAKa,SAAS,CAAEf,MAAO,IAAIC,SAzB/B,oBA4BE,WACE,IAAQU,EAAST,KAAKU,MAAdD,KACAX,EAAUE,KAAKH,MAAfC,MAER,OACE,sBAAKgB,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGL,IAGF,YAED,sBAAMK,UAAU,cAAhB,SACGhB,EAAMQ,cAAcC,OAAO,IAAK,YAzC3C,GAA2BQ,aCAdC,G,MAAb,4MACEpB,QAAU,EADZ,EAGEC,MAAQ,CACNoB,UAAW,UACXC,UAAU,GALd,EAgCEC,UAA2B,SAACC,GAC1BA,EAAMC,iBACN,EAAKR,SAAS,CAAEK,UAAU,KAlC9B,EAqCEI,UAA2B,WACzB,EAAKT,SAAS,CAAEK,UAAU,KAtC9B,uDAQE,WAAqB,IAAD,OAClBlB,KAAKJ,QAAUK,OAAOC,aAAY,WAChC,EAAKqB,kBACJ,MAEHC,SAASC,iBAAiB,cAAezB,KAAKmB,WAE9CK,SAASC,iBAAiB,QAASzB,KAAKsB,aAf5C,kCAkBE,WACErB,OAAOW,cAAcZ,KAAKJ,SAE1B4B,SAASE,oBAAoB,cAAe1B,KAAKmB,WAEjDK,SAASE,oBAAoB,QAAS1B,KAAKsB,aAvB/C,2BA0BE,WACE,IAAMK,EAAQ5B,KAAK6B,MAAMC,WAAWtB,OAAO,GAE3CP,KAAKa,SAAS,CAAEI,UAAU,SAAD,OAAWU,OA7BxC,oBAyCE,WACE,MAAgC3B,KAAKH,MAA7BoB,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,SAEnB,OACE,sBAAKJ,UAAU,MAAf,UACE,6CAECI,GACC,cAAC,EAAD,CAAOT,KAAMQ,WAjDvB,GAAyBF,cCPzBe,IAASC,OACP,cAAC,EAAD,IACAP,SAASQ,eAAe,W","file":"static/js/main.c49f1797.chunk.js","sourcesContent":["import { Component } from 'react';\n\ninterface Props {\n  name: string;\n}\n\ninterface State {\n  today: Date;\n}\n\nexport class Clock extends Component<Props, State> {\n  timerId = 0;\n\n  state = {\n    today: new Date(),\n  };\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      this.getTime();\n      // eslint-disable-next-line\n      console.info(new Date().toUTCString().slice(-12, -4));\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    // eslint-disable-next-line\n    prevProps.name !== this.props.name && console.debug(`Renamed from ${prevProps.name} to ${this.props.name}`);\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.timerId);\n  }\n\n  getTime() {\n    this.setState({ today: new Date() });\n  }\n\n  render() {\n    const { name } = this.props;\n    const { today } = this.state;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {name}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {today.toUTCString().slice(-12, -4)}\n        </span>\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport { Clock } from './components/Clock';\n\nimport './App.scss';\n\ninterface State {\n  clockName: string;\n  hasClock: boolean;\n}\n\nexport class App extends Component<{}, State> {\n  timerId = 0;\n\n  state = {\n    clockName: 'Clock-0',\n    hasClock: true,\n  };\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      this.getRandomName();\n    }, 3300);\n\n    document.addEventListener('contextmenu', this.hideClock);\n\n    document.addEventListener('click', this.showClock);\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.timerId);\n\n    document.removeEventListener('contextmenu', this.hideClock);\n\n    document.removeEventListener('click', this.showClock);\n  }\n\n  getRandomName() {\n    const value = Date.now().toString().slice(-4);\n\n    this.setState({ clockName: `Clock-${value}` });\n  }\n\n  hideClock: EventListener = (event) => {\n    event.preventDefault();\n    this.setState({ hasClock: false });\n  };\n\n  showClock: EventListener = () => {\n    this.setState({ hasClock: true });\n  };\n\n  render() {\n    const { clockName, hasClock } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {hasClock && (\n          <Clock name={clockName} />\n        )}\n\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}